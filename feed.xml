<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Yuguo's Blog</title>
		<link>http://yuguo.us/</link>
		<atom:link href="http://yuguo.us//feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>前端工业化1：自动化</title>
				<description>&lt;p&gt;最近在学习百度前端工程师张云龙的F.I.S系统的时候，了解到他关于“前端工业化”的理解，我也经历过很多前端架构方法和架构工具的变迁，所以希望借写这篇文章的机会，自己也整理一下。&lt;/p&gt;

&lt;p&gt;之前有读者建议我写写关于D.R.Y的经验，其实好的架构能让你免于Repeat Yourself。但是架构的目的不仅限于在开发者侧更轻松，更有组织，而更重要的是在客户侧更简洁纯粹。&lt;/p&gt;

&lt;p&gt;张云龙关于架构有一段话很好：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;因为优化原则中很多要求是与工程管理相违背的，比如“把css放在头部”和“把js放在尾部”这两条原则，我们不能让团队的工程师在写样式和脚本引用的时候都去修改一个相同的页面文件。&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;就像是硬币的两面，&lt;strong&gt;一面朝客户，关注性能、缓存、减少重复、保持一致；一面朝前端团队，关注维护、发布流程&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;小型团队也需要合理的架构，这样可以增强扩展性和安全性。当网站从小团队渐渐发展到大团队，网站渐渐拥有千万用户的时候，整个流程更加要自动化。如果说求职的时候需要的“精通CSS”是考察开发者手工技艺，那么前端工业化就是关于如何让开发者团队可以无缝工作。&lt;/p&gt;

&lt;p&gt;先介绍我们Qzone团队是怎样从刀耕火种的原始时代过度到现在的。&lt;/p&gt;

&lt;h2&gt;手工&lt;/h2&gt;

&lt;p&gt;大概是2010年之前，我们SVN的目录结构很简单。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;┌ html
├ public
├ PSD
├ 规范
└ 一些批处理脚本
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;public里的东西就是对应外网发布的静态资源，包括css和图片，雪碧图全手工拼接。外网代码中甚至能看到注释。&lt;/p&gt;

&lt;p&gt;CDN输出静态资源采用统一的缓存规定，好像是一个小时。要发布新代码就直接发布覆盖旧文件，反正缓存时间不长。&lt;/p&gt;

&lt;p&gt;但是我们也有长缓存的需求，比如一个黄钻vip的图标，可能一年都不会变，这时候我们规定了一个目录叫/ac/，代表长缓存，至于有多长，这个没法定制，反正运维人员给CDN统一设定了一个很长的时间，开发者想长缓存的东西就丢进去好了。&lt;/p&gt;

&lt;p&gt;这个/ac/目录出于某种神秘的原因甚至不在SVN的管理之中，我们要修改的话直接去服务器上拿（后来那台服务器挂了，我们就从外网拿）。&lt;/p&gt;

&lt;h2&gt;cssgaga&lt;/h2&gt;

&lt;p&gt;因为我们发布文件的第一步需要把文件放在一台服务器上，然后通过发布系统分发到CDN。放文件这个过程不是很优雅，也不太可靠。需要我们打开两个资源管理器（远程服务器还要输入用户名和密码），然后拷贝过去。&lt;/p&gt;

&lt;p&gt;第二步，分发系统（ARS）需要知道文件在哪台服务器上的哪个路径（linux路径），所以我们提交发布单的时候还要提供linux路径列表（称为提单列表），这就很麻烦。&lt;/p&gt;

&lt;p&gt;于是我们的团队成员&lt;a href=&quot;http://www.99css.com/&quot;&gt;yt&lt;/a&gt; 就研发了一个工具叫做&lt;a href=&quot;http://www.99css.com/archives/tag/cssgaga&quot;&gt;cssgaga&lt;/a&gt;。在windows上运行，简单配置之后，只要把需要发布的文件拖拽到工具里，就可以自动登录远程服务器并且把文件放在对应的地方，非常方便。&lt;/p&gt;

&lt;p&gt;再后来，yt慢慢在cssgaga中加入了更多的功能，比如css文件中的@import语法，可以自动合并成一个css文件，这样减少了http请求和渲染阻塞。&lt;/p&gt;

&lt;p&gt;还有data-uri，可以把引入的图片变成data-url，进一步请求，不过这个比较极端，很少用到。比如图片关联性检查，会遍历CSS中对img的引用，并自动生成提单列表。&lt;/p&gt;

&lt;p&gt;真正让cssgaga成为团队必不可少人人都用的是在2010年12月，cssgaga加入了自动雪碧图的功能，那篇介绍雪碧图功能的文章获得了80个评论。因为市面上的雪碧图工具都不太好用，拼雪碧图还处于半手工的状态，而cssgaga是完全自动化的。&lt;/p&gt;

&lt;p&gt;其实cssgaga这几年一直都在更新，加入了大量团队需要的功能，但是最核心的几条原则从来没有改变过：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;本地的CSS源码也是完全合法的语法，没有自定义的语法规则，可以直接打开静态页面，最终cssgaga生成的代码也是最符合雅虎14条的压缩代码。&lt;/li&gt;
&lt;li&gt;assets之间的关系通过合法的语法关联起来，而不是像F.I.S或者Grunt那样有一个配置关联表。举例来说，多个css组件被@import到同一个A.css中，然后拖A.css的时候就会自动搜寻相对路径中的那些css进来。拖某个css到cssgaga中（并勾选检查关联性），就会自动搜寻当前目录下所有@import了这个css的css文件，并全部发布。&lt;/li&gt;
&lt;li&gt;黑盒+不开源&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;我很欣赏yt有自己的坚持，有清晰的理念支持的工具，但是我们也应该了解其他可能的选择。&lt;/p&gt;

&lt;h2&gt;Shell编程&lt;/h2&gt;

&lt;p&gt;之前写过一篇文章&lt;a href=&quot;http://yuguo.us/weblog/make-bootstrap/&quot;&gt;Bootstrap的编译机制&lt;/a&gt;，当时Bootstrap的CSS文件是使用Make来编译的，如果你没有看过这篇文章，强烈推荐你先阅读这篇文章，再回来也许能更好的理解Make。&lt;/p&gt;

&lt;p&gt;GNU make是一个方便的工具，目的是把大量的shell 命令组合起来完成一个任务。这些命令之所以能组合起来，跟Linux哲学是息息相关的：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;程序要能协作。程序要能处理文本流，因为这是最通用的接口。&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;程序协作是通过“依赖”来实现，而make能很好地解决任务之间的依赖问题。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gh-pages: bootstrap docs
    rm -f docs/assets/bootstrap.zip
    zip -r docs/assets/bootstrap.zip bootstrap
    rm -r bootstrap
    rm -f ../bootstrap-gh-pages/assets/bootstrap.zip
    node docs/build production
    cp -r docs/* ../bootstrap-gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;gh-pages是工作目标；&lt;/li&gt;
&lt;li&gt;bootstrap docs是必要条件；&lt;/li&gt;
&lt;li&gt;以后的6行是命令&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Makefile的语法是linux shell语法，所以对于前端开发来说需要一定的学习成本。这里有一篇不错的文章，可以看一下&lt;a href=&quot;http://www.linuxforu.com/2012/06/gnu-make-in-detail-for-beginners/&quot;&gt;GNU Make in Detail for Beginners&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;Grunt&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://Gruntjs.org&quot;&gt;Grunt&lt;/a&gt;的自我介绍是：“The JavaScript Task Runner”。&lt;/p&gt;

&lt;p&gt;Grunt 是一个开源的基于任务 (Task) 的前端构建框架。它除了有 Jake 的优点（跨平台、开发简单）以外，还有一套设计良好的 task 框架用来组织各种构建任务。Grunt 内置了几个非常常见的构建任务：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; concat - 组合各种文件&lt;/li&gt;
&lt;li&gt; lint - 用 JSHint 检查代码&lt;/li&gt;
&lt;li&gt; min - 用 UglifyJS 压缩代码&lt;/li&gt;
&lt;li&gt; qunit - 跑 QUnit 单元测试&lt;/li&gt;
&lt;li&gt; watch - 当源代码文件发生变化时自动执行任务&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;除此之外还可以通过 npm 来方便的获取几百个现成的 task，比如用 closure 而不是 UglifyJS 来压缩 js，或者用 less 来生成 css，又或者用 jslint 而不是 jshint 来检查语法等，这些任务都可以在 npm 上找到。如果这些任务无法满足你的需求，Grunt 还允许你方便的添加自定任务，就像写 nodejs 代码一样简单。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;对于前端开发者来说，Grunt语法可比Shell友好多了，而且Gruntfile.js是合法的javascript文件，在里面可以运行任何合法的javascript代码，非常灵活。&lt;/strong&gt;关于从Shell过度到Grunt这个过程，有兴趣的可以参考这篇文章&lt;a href=&quot;http://lostjs.com/2012/12/08/Grunt-the-best/&quot;&gt;Grunt -- 最好的前端构建框架&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;话分两边，工具侧我们一直没有停止进步，朝着更自动化的方向迅猛发展。那么真正面向用户的缓存和请求侧又有哪些进展呢，下一篇日志会讲讲缓存和更新缓存。&lt;/p&gt;
</description>
				<pubDate>Fri, 25 Oct 2013 14:00:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/frontend-industrialize/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/frontend-industrialize/</guid>
			</item>
		
			<item>
				<title>我是怎么阅读的</title>
				<description>&lt;p&gt;我平时的阅读包括读书和网上的文章，我记忆力不是太好，不可能达到过目不忘的程度，所以读了好书之后往往还会再多读几次。&lt;/p&gt;

&lt;p&gt;关于笔记，下面这些办法都是为了方便第二次看的时候更快进入角色。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;关于电子书来源，我默认都是从多看上购买，如果amazon.cn上有多看上没有的书源，就切换系统去购买。一方面是因为购买很方便，时间就是金钱，另一方面电子书已经很便宜了，在能力可以的时候尽量还是去购买正版吧。&lt;/li&gt;
&lt;li&gt;在网上看到好的文章，或者查阅到有用的文章的时候，不使用read later类的服务，因为read later = read never。我会保存到evernote里去，然后在evernote里做一遍“沥水”的工作：去掉无关紧要的内容，去掉废话，把重要的部分高亮。&lt;/li&gt;
&lt;li&gt;看的过程中比较有感悟的地方做一下书摘，也可以导出到evernote。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;这样的好处是以后可以统一在evernote里搜索相关内容，然后可以快速看高亮的部分。&lt;/p&gt;

&lt;p&gt;此外，我认为最好的读书过程是每读完一章就用自己的话总结一下这一章说了些啥。读的过程中有书摘，方便第二次直接看书摘。﻿&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://yuguo.us/weblog/kindle-paperwhite/&quot;&gt;kindle paperwhite是迄今最好的阅读器&lt;/a&gt;（也是最便宜的！），每一个喜欢读书的人都应该买一台，如果准备买的话，我左边有个广告链接，可以去我女朋友的淘宝店海淘一个。&lt;/p&gt;

&lt;p&gt;关于阅读时间，早上在车上居多，晚上也会看一段时间，现在根据统计，每天的平均阅读时间已经降到40分钟/天了，之前是2小时/天。从5月份&lt;a href=&quot;http://yuguo.us/weblog/repick-kindle/&quot;&gt;重拾kindle&lt;/a&gt;之后，已经购买了42本书，大部分都看完了。&lt;/p&gt;

&lt;p&gt;其实，最终我想说的是，读书的过程是很美，拿着kindle paperwhite在地铁上掏出来也恍惚有一种文艺青年的感觉。但是最终我们看重的应该是真正进入大脑的“无形”的知识，以及引起的思考，而我们付出的代价就是金钱和时间，金钱是廉价的代价，而时间是更大的代价。硬件只是书籍的承载，让你可以方便的阅读，如果把阅读搞得更麻烦了，就不要去做这件事。&lt;/p&gt;

&lt;p&gt;所以，阅读的时候，时刻记住自己为什么阅读，就能放弃很多无谓的折腾，进入到一个纯粹的精神世界。&lt;/p&gt;

&lt;p&gt;最后以一碗鸡汤作为结尾：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;  有个年轻人崇拜杨绛，高中毕业的时候给杨绛写了一封长信，表达自己的仰慕之情兼倾诉人生困惑，杨绛给他回信了。淡黄色的竖排红格信纸，毛笔字。除了寒暄和一些鼓励晚辈的句子之外，杨绛的信里其实只写了一句话，诚恳而不客气：“你的问题主要在于读书不多而想得太多。”&lt;/p&gt;&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 14 Oct 2013 14:00:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/my-reading/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/my-reading/</guid>
			</item>
		
			<item>
				<title>腾讯三年</title>
				<description>&lt;p&gt;博客停了一个多月，期间也想过写一些东西，但都是在evernote里起草了部分之后又觉得自己文笔和思路都不够好，就删掉了。这两个月发生的事情非常多，我就随意记录一下，谈谈我的想法吧。&lt;/p&gt;

&lt;h2&gt;腾讯三年&lt;/h2&gt;

&lt;p&gt;进入腾讯三年，从助理设计师一步步晋级到高级设计师，期间的感悟和辛苦都只有自己能获益，就像王小波的《沉默的大多数》中说的：人们都是从沉默中学习，而不是从话语中学习。如果我总结出任何话语，比如：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;要积极响应上下游的需求&lt;/li&gt;
&lt;li&gt;要主动关注业务&lt;/li&gt;
&lt;li&gt;你必须非常努力，才能看上去毫不费力&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;这些话语在说出来的瞬间，它就脱离了土壤，成为空中楼阁，被人冠以“政治正确”、“装逼”的帽子。&lt;/p&gt;

&lt;p&gt;我喜欢把人分为两类，一种是看见任何社会现象都会嘲弄一把（或者叫黑一把），另一种是看见任何事情都能想想自己从中学到什么的。前者是话语的世界，后者是沉默的世界。&lt;/p&gt;

&lt;h2&gt;买房&lt;/h2&gt;

&lt;p&gt;之前我是坚定地不买房。现在我买了，五个原因：&lt;/p&gt;

&lt;ol type=&quot;a&quot;&gt;
&lt;li&gt;第四次搬家的一个房子还挺喜欢的，但是准备续租的时候，房东不租了，加钱都不租。&lt;/li&gt;
&lt;li&gt;入职三年，表现良好，腾讯提供三十万无息贷款。&lt;/li&gt;
&lt;li&gt;自己判断 &lt;strong&gt;深圳&lt;/strong&gt; &lt;strong&gt;前海&lt;/strong&gt;房价还有上涨空间。&lt;/li&gt;
&lt;li&gt;深圳是不错的城市。&lt;/li&gt;
&lt;li&gt;小平在这件事上表现出了鲜有的极高的行动力。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;所以一个月内就把房子看好买进了，现在已经入住。&lt;/p&gt;

&lt;h2&gt;知乎&lt;/h2&gt;

&lt;p&gt;之前每天的班车上我都是看kindle，最近两个月开始偶尔刷知乎。认为这也是这几个月非常大的一件事，因为我从中学到的东西太多了。&lt;/p&gt;

&lt;p&gt;关注了一些现在的我只能仰视的人，感慨他们的文笔和思路都是如此清晰，这也算是我博客搁置的一个小小因素，因为觉得了自己的渺小。&lt;/p&gt;

&lt;p&gt;但是其实知乎上还有些人其实都是看见问题就站队伍，扣帽子。比如这个问题：&lt;a href=&quot;http://www.zhihu.com/question/21292446&quot;&gt;怎样劝说男朋友不要看新闻联播？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;站队伍的同学看见这个问题就嗨了，首先就站在“新闻联播”的对立面（站队伍），准备来“黑”一把（浪费时间），称“新闻联播”为“官媒”、“传声筒”（扣帽子）。&lt;/p&gt;

&lt;p&gt;我学到的是不管什么问题出现了，不要因为对问题中的某个人物或者组织不满就站队伍，扣帽子，这跟文革红卫兵是一个性质的。不了解的话题不赞同，只感谢。&lt;/p&gt;

&lt;h2&gt;读书&lt;/h2&gt;

&lt;p&gt;最近的书推荐4本，非虚构类的《第五项修炼》、《清醒思考的艺术》和《精益创业》，虚构类的《黑笑小说》。四本书在多看书城都有售。&lt;/p&gt;

&lt;p&gt;《清醒思考的艺术》其实已经在六月荐书单里推荐过了，但是这两个月又重新看了一遍。这本书是很轻松的，每个短小章节都介绍了一种思维误区。&lt;/p&gt;

&lt;p&gt;先提另一本书，大学看的一本书《写给大家看的设计书》里有一个原理叫做“约书亚树原理”，是说“只要你能说出什么东西的名字，你就很容易注意到它”。&lt;/p&gt;

&lt;p&gt;我对《清醒思考的艺术》中的一章“干掉你的宠儿”印象比较深刻，之后我就随时随地注意到了这种现象。&lt;/p&gt;

&lt;p&gt;有一些同事是买了房的，他坚信（其实是希望）房价继续上涨，达到他入手价格的两倍才够。这时候他会看到很多支持他观点的“事实”，比如中央调控又加紧了，预示着需求被抑制；比如跟去年比环比价格提高多少。&lt;/p&gt;

&lt;p&gt;而另一些同事没买房而又希望房价下跌的，他会看到很多支持他观点的“新闻”，比如跟上周比环比交易数下跌，交易价格下跌等……&lt;/p&gt;

&lt;p&gt;这个世界的资讯这么多，反而让人们更加偏颇和专横，而不是兼容包并。微博和搜索让我们越是希望证明什么观点，我们越是能找到支持这种观点的证据。&lt;/p&gt;

&lt;p&gt;事情过去之后，这些观点要是能回头看，自己都会觉得好笑，所以我之前在QQ空间还说，回头看3年前的自己，就是一个纯傻逼，6年前的，更是傻到冒泡。希望三年后看自己也是这样的。&lt;/p&gt;

&lt;p&gt;要走出这个思维误区很简单，总是证明自己是错的，而不是证明自己是对的。&lt;/p&gt;

&lt;h2&gt;入手macbook retina&lt;/h2&gt;

&lt;p&gt;这个绝对物超所值，现在已经完全习惯ssd硬盘的启动速度，还有retina的画面渲染，回不去了。apple产品还是比较保值，最好是隔一代产品就换一次，把老的出掉。&lt;/p&gt;

&lt;h2&gt;翻译新书&lt;/h2&gt;

&lt;p&gt;在组织翻译一本书《Responsive design workflow》（《响应式设计工作流程》），是New Rider出版社的，由人民邮电出版社引进，现在进度50%了。&lt;/p&gt;

&lt;p&gt;一般的响应式设计的文章都会在某一个点上着墨，比如从技术上怎么实现多个设备断点变化，比如设计师如何设计多个尺寸的页面。而这本书把所有的独立过程都串起来了，我在翻译的过程中也是觉得很有价值的一本书。就像《第五项修炼》中的“系统思考”所描述的，你必须要有一个全局的实业，摒除传统的“流水线”思维。&lt;/p&gt;

&lt;p&gt;变化正在到来，敬请期待。&lt;/p&gt;
</description>
				<pubDate>Tue, 01 Oct 2013 10:40:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/tencent-3-years/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/tencent-3-years/</guid>
			</item>
		
			<item>
				<title>介绍Reveal.js</title>
				<description>&lt;p&gt;jQuery reveal是最近在用的一个jQuery插件，作用是控制弹出层的显示和消失。这个插件非常轻量，而且使用简单，如果页面中已经加载了jQuery的话，只需要额外1.35k的大小就能使用reveal.js。&lt;/p&gt;

&lt;p&gt;使用方法可以在其&lt;a href=&quot;http://zurb.com/playground/reveal-modal-plugin&quot;&gt;官方网站&lt;/a&gt;上看到介绍。&lt;/p&gt;

&lt;h2&gt;链接触发浮层&lt;/h2&gt;

&lt;p&gt;首先加载需要的样式、jQuery和reveal.js之后，我们如果需要点击一个链接弹出一个弹出层，只需要在链接中加上&lt;code&gt;data-reveal-id&lt;/code&gt;属性：&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://snipt.net/embed/a7a11463256a8e55e13ab69feadfa9d0/&quot;&gt;&lt;/script&gt;


&lt;p&gt;然后在对应弹出层的id跟链接的&lt;code&gt;data-reveal-id&lt;/code&gt;保持一致即可。&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://snipt.net/embed/3bc5dfa546b4780472545eb8fea109f6/&quot;&gt;&lt;/script&gt;


&lt;p&gt;浮层一般会有一个关闭按钮，我们不用在按钮上绑定事件来关闭浮层了，只需要简单地使用class：&lt;code&gt;close-reveal-modal&lt;/code&gt;即可。&lt;/p&gt;

&lt;h2&gt;代码触发浮层&lt;/h2&gt;

&lt;p&gt;有时候我们希望用代码来触发浮层操作，也非常简单：&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://snipt.net/embed/d497a8f659e1c610f6ce1a48e8669105/&quot;&gt;&lt;/script&gt;


&lt;p&gt;如果要使用html属性来触发这些option，也可以：&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://snipt.net/embed/34db731ca7ab2b9eabe5ac5dd381ea28/&quot;&gt;&lt;/script&gt;


&lt;p&gt;总的来说，使用reveal.js插件可以帮助我们更专注于页面逻辑，也不用在页面事件和触发上操太多心。&lt;/p&gt;
</description>
				<pubDate>Tue, 20 Aug 2013 17:40:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/introduce-revealjs/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/introduce-revealjs/</guid>
			</item>
		
			<item>
				<title>不可以放弃的事情</title>
				<description>&lt;p&gt;&lt;img src=&quot;/files/2013/08/supper.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;前一段时间看到一篇文章&lt;a href=&quot;http://finance.qq.com/a/20130802/003566.htm&quot;&gt;萦在职场：哪些东西不能因为工作而放弃？&lt;/a&gt;，里面有一段话说的很好：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;精疲力歇主要是由于愤怒。要想战胜这种情绪，你需要知道究竟因为失去了什么导致你产生这种感觉。我会告诉人们：找准自己的节奏。所谓节奏就是一些对你很重要的事物，如果失去了这些东西，你就会厌恶工作。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对于我来说，不可以因为工作放弃的事情就是家里的晚餐。如果工作量太大，我可以接受早上提前两小时上班，但是不可以接受晚上不在家吃晚餐。&lt;/p&gt;

&lt;p&gt;在食堂吃饭总是一股浓浓的快餐味道，不仅是味道，而且是食堂整体给人的一种流水线感觉，吃饭只是为填保肚子。所以即使在食堂吃海鲜也有一种为生计奔波的味道，赶紧填饱肚子继续干活去。在家吃饭就没有这种填饱肚子的“功利性”，可以享受这个过程。&lt;/p&gt;

&lt;p&gt;在饭店吃饭也有诸多不安，一方面食品卫生得不到保障，另一方面超过大半的饭店都没有家厨做的美味，家有大厨，能把土豆烧肉做成人间美味，更不提各种变着花样的菜谱。&lt;/p&gt;

&lt;p&gt;也不奢望每天都能在家吃，工作五天，能够在家吃3天，就谢天谢地了。&lt;/p&gt;

&lt;p&gt;这就是我不可以放弃的事情。&lt;/p&gt;
</description>
				<pubDate>Thu, 08 Aug 2013 20:10:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/my-supper/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/my-supper/</guid>
			</item>
		
			<item>
				<title>制度与财富——读《为什么中国人勤劳而不富有》</title>
				<description>&lt;p&gt;《为什么中国人勤劳而不富有》这本书大概是我今年读到最好的书，其中解决了很多我从小就有的疑惑，我希望我在更年轻一点的时候就读到这本书。&lt;/p&gt;

&lt;h2&gt;股票对社会的意义是什么？&lt;/h2&gt;

&lt;p&gt;我小时候不懂，为什么人们要去炒股，在这个过程中股民明明什么都没有“生产”，却能赚大钱，或者赔上全部家产。&lt;/p&gt;

&lt;p&gt;现在我明白，股民不是什么都没有“生产”，股民所做的是让资本能够自由流通，流向更被“看好”的企业。私人股权基金给社会创造的价值，在于逼着各资产的掌权者去最大化回报，从而提高整个经济的效率。&lt;/p&gt;

&lt;p&gt;换言之，现代金融证券市场的发展从根本上加快了实现财富的速度，使未来的财富也能转变成今天的资本，从而增加资本总量，加快资本周转速度。&lt;/p&gt;

&lt;h2&gt;贸易保护主义真的对当地企业和民众有好处吗？&lt;/h2&gt;

&lt;p&gt;无论是对企业还是对民众，贸易保护主义都只有坏处没有好处。&lt;/p&gt;

&lt;p&gt;贸易保护主义比如对国外征收高额关税，禁止邻省的啤酒在本省出售等。它等于增加交易成本，抑制竞争和创新，往经济增长链中加沙子，而不是加润滑剂。&lt;/p&gt;

&lt;p&gt;过去二十几年广东经济飞速增长，广东人的收入快速上升，本来湖南作为直接的邻省应该能享受广东最多的“外溢效应”，但这些“外溢效应”都被贸易保护主义排斥在外。&lt;/p&gt;

&lt;h2&gt;怎么样定义国家财富？&lt;/h2&gt;

&lt;p&gt;国家财富一方面是物质上的财富，比如多少高楼大厦，多少的生产等。另一方面，也是越来越显得重要的，是制度财富。&lt;/p&gt;

&lt;p&gt;我们中国人是世界上最不怕苦、最不怕脏、最勤奋的民族之一，可我们还是这么穷，为什么？茅于轼说：“因为人们的劳动没有用在生产商，甚至用在了抵消别人劳动成果的努力上；更因为各式各样的浪费普遍存在，耗掉了巨大的社会财富，可是每个人对此又无能为力。”&lt;/p&gt;

&lt;p&gt;日本、美国和新加坡的经验说明，一个国家更重要的财富是其能促进财富创造的制度机制及与其相配套的自由金融创新体系，这种制度财富是无形的，但它比有形的“地大物博”更重要、更“值钱”。&lt;/p&gt;

&lt;p&gt;我们的制度非常差，为了弥补这些制度成本、规避交易风险，人们不得不格外勤奋、一天多工作几小时、少拿些收入。这就是为什么我们一周七天都不分白天黑夜地在工作，晚上十一二点还在通工作电话，这是我们为制度成本必须付出的代价。&lt;/p&gt;

&lt;p&gt;为什么说我们的制度差，表现在哪些方面？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;公司的注册与审批程序复杂耗时&lt;/li&gt;
&lt;li&gt;对新注册公司的资金底线要求高&lt;/li&gt;
&lt;li&gt;对各行业设置准入壁垒&lt;/li&gt;
&lt;li&gt;户籍制度限制农民工的人口流动权利&lt;/li&gt;
&lt;li&gt;缺乏对消费者权益的保护&lt;/li&gt;
&lt;li&gt;缺乏对知识产权的保护&lt;/li&gt;
&lt;li&gt;等等……&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;这些制度限制人民自由交易、抑制创业、鼓励腐败、鼓励污染……我们过去的经济增长靠制造业和房地产，而这些的增长空间终究有限，我们需要发展更多的服务业，而服务业对制度的要求非常高。所以我们的制度迫切需要改革。&lt;/p&gt;

&lt;h2&gt;老百姓产权的威胁来自哪里？&lt;/h2&gt;

&lt;p&gt;在兵荒马乱的时代，老百姓产权的威胁可能来自于强盗，小偷和政府。而和平时代，强盗的概率较小（重庆除外），小偷可以防，而政府是唯一可以合法地强占老百姓资产的机构，政府部门拥有随时书写法律、法规、条例和各类文件的权力，所以老百姓产权的最大的威胁来自于行政部门。&lt;/p&gt;

&lt;p&gt;所以说保护产权，就是要保护老百姓的产权不受行政部门的侵犯。&lt;/p&gt;

&lt;h2&gt;为什么说房屋买卖交税是侵犯了公民产权？&lt;/h2&gt;

&lt;p&gt;因为老百姓的交易权也是他们产权的一部分，征税和限制交易权都等于摄取公民的财产。针对房产交易征收营业税、契税、增值税等对其收入流的直接摄取，如果征税方不能直接或间接给房产所有者提供“补偿”，这就有悖于《宪法》第十三条的精神。&lt;/p&gt;

&lt;p&gt;如果说以“政府规定了税只能由买方出”为理由辩驳的话，就需要去补习一下税负转嫁的知识了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;税负转嫁是指商品交换过程中，纳税人通过提高销售价格或压低购进价格的方法，将税负转嫁给购买者或供应者的一种经济现象。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即使张三的房子许多年之内不会卖，拥有出售房产的灵活性总不是坏事，万一哪天他要换房呢？&lt;/p&gt;

&lt;h2&gt;为什么中国污染这么严重？&lt;/h2&gt;

&lt;p&gt;因为土地不私有，产权不明晰，那么所有的公共资源大家都随意使用，污染随意排放了。&lt;/p&gt;

&lt;h2&gt;中国贫富差距为什么大？是不是太市场经济了？&lt;/h2&gt;

&lt;p&gt;中国的收入差距问题与其说是市场经济的问题，倒不如说是对政府资源配置权力、对管制权力的监督制衡和问责的问题。&lt;/p&gt;

&lt;p&gt;拿北京与其他城市或地区作横向的比较，会发现资源配置既不讲效率，又不讲公平，而是遵循权力法则。&lt;/p&gt;

&lt;p&gt;反而那些完全市场经济的国家，按照经典的索罗-斯旺经济增长模型来解释，地区间人均增长之所以不同，是源于资本与劳动力比例的不同。如果地区之间生产要素的流动不受自然环境、法律或者政府的限制，劳动力将从资本匮乏、收入低的地区迁移到资本密集的地区，而资本密集地区的资本将转移至资本稀缺的地区。&lt;/p&gt;

&lt;h2&gt;会不会因为中国人口太多，不适合搞市场经济？&lt;/h2&gt;

&lt;p&gt;相反，中国因为人口太多，而非常适合搞市场经济。&lt;/p&gt;

&lt;p&gt;拿公司做比方，小公司比如一个煎饼店，所有者（老板）和经营者（老板）是同一个人，所以不可能出现任何腐败现象，老板省得钱是自己的，浪费的也是自己的。&lt;/p&gt;

&lt;p&gt;在大一点的股份公司，老板实际上是全世界股东，其中有一些代表，称为董事会，经营者是董事会聘请的管理层。这时候所有者和经营者之间就有点远了，比较容易发生腐败的现象，也会发生浪费的现象。所以董事会随时有撤换管理层的权限，管理层也必须定时汇报自己的工作，汇报收入和支出。此外还有注册会计师来企业查账。&lt;/p&gt;

&lt;p&gt;而国家的所有者是老百姓，经营者是政府，这期间的距离就十万八千里了。更糟糕的是所有者对管理者还毫无更换的权利！&lt;/p&gt;

&lt;p&gt;所以，结论是由于中国的人民太多，而且没有民选政府，所以越不能搞国企，如果搞，腐败和贪污就会无所不有，代理成本和利益扭曲就会出奇的高。&lt;/p&gt;

&lt;h2&gt;结论&lt;/h2&gt;

&lt;p&gt;本书的内容质量非常高，远高出本书标题给人的感觉。本书在多看和豆瓣阅读上都由电子版，推荐大家去购买。&lt;/p&gt;
</description>
				<pubDate>Mon, 29 Jul 2013 23:40:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/system-and-fortune/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/system-and-fortune/</guid>
			</item>
		
			<item>
				<title>QQ空间的勇敢开发者</title>
				<description>&lt;p&gt;前几天正好是腾讯正式入职3周年，当时在QQ音乐打杂一段时间，次年3月正式入伙QQ空间。&lt;/p&gt;

&lt;p&gt;从最开始的分啥任务就做啥任务，到现在有更多地时间和意识去关注产品，我觉得自己心态上的改变还是挺大的。&lt;/p&gt;

&lt;p&gt;昨天在v2ex有个帖子&lt;a href=&quot;http://v2ex.com/t/77060#reply32&quot;&gt;请允许我表达一下对 QQ 空间团队的不满与忿恨&lt;/a&gt;，我认真地看完了之后，心里的第一反应就是“有些事情我们可以做得更好点”。&lt;/p&gt;

&lt;p&gt;不是“我也是QQ空间团队了你怎么这样骂我”，也不是“我也做不了什么还是闪了吧”，而是潜意识里有责任，马上回复“我可以解决和反馈”。&lt;/p&gt;

&lt;p&gt;我没有任何划分阵营的感觉和意识，但是很奇怪，很多网友都会自己是v2ex用户，莫名的优越感。其实平台跟人的关系真的不大。若说到v2ex跟QQ空间不能有交集，那是自己的世界观太狭隘了。&lt;/p&gt;

&lt;p&gt;v2ex的老板@livid的很多对论坛规则的设定，和一些号召都对我有不小的影响，比如&lt;a href=&quot;http://v2ex.com/t/74511#reply83&quot;&gt;他真的是一个很聪明的人&lt;/a&gt;中的原话“这个世界有太多人意识不到自己是在浪费时间。”&lt;/p&gt;

&lt;p&gt;比如&lt;a href=&quot;http://v2ex.com/t/76799#reply68&quot;&gt;请大家不要在 V2EX 用排队形的方式回复&lt;/a&gt;中的回复：“你在互联网上留下的这些痕迹，究竟有哪些是有意义持续存在的。”&lt;/p&gt;

&lt;p&gt;我年轻的时候世界观也不怎么完善，而且做了不少浪费时间的事情。现在年纪大一点，总是很在意自己是不是在浪费时间。现在偶尔能看到自己几年前的一些痕迹，感慨自己当年的幼稚，今天看到年轻人在论坛的发帖，一样的感慨。&lt;/p&gt;

&lt;p&gt;后来我留下QQ跟楼主聊了一会，记录了几个问题，之后又有别的用户来加我聊天。&lt;/p&gt;

&lt;p&gt;QQ空间有亿万级别的用户，哪怕一点点的优化也会改善很多人的体验，其实我对这种数据和措辞都麻木了。因为“用户”这个词常常在耳边环绕，就不会觉得他们是“人”了，会觉得是数据，以万为最小单位的数据。&lt;/p&gt;

&lt;p&gt;但是跟用户直接的沟通会让我脑补用户的使用画面，有个v2ex网友加我QQ反馈他女朋友每次点开原创动态，再关闭的时候，背景音乐就停止了。我马上想象一个喜欢在QQ音乐听歌的妹子，在点开原创动态的时候，音乐突然停止的画面，就再次打开音乐，再点原创，又停止……问题很严重有木有！&lt;/p&gt;

&lt;p&gt;QQ空间是一个非常巨大的产品，背后的团队是大几百人（可能快到1k了），这时候工程师可能会很沮丧，会有“我也做不了什么，推不动，干脆摆烂，反正打份工”的想法。&lt;/p&gt;

&lt;p&gt;有一句话是说，最勇敢的事情是认清了生活的真相之后依旧热爱生活。&lt;/p&gt;

&lt;p&gt;其实从刚进入职场的的初生牛犊，觉得什么问题都能解决，什么问题都去反馈，到现在，&lt;strong&gt;渐渐认清自己能力和影响力的边界，认识到团队的不完美，认识到流程的局限，但是仍然热爱自己所做的产品，在自己的能力内，一点一点让产品变好，我觉得这就是勇敢&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;我的QQ是 289796721 ，使用QQ空间（特别是个人中心）有任何问题都可以找我聊，请注明“QQ空间反馈”。&lt;/p&gt;

&lt;p&gt;好久没写这么鸡汤的日志，先干为敬……&lt;/p&gt;
</description>
				<pubDate>Sat, 27 Jul 2013 23:59:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/qzone-2-year/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/qzone-2-year/</guid>
			</item>
		
			<item>
				<title>6月荐书单</title>
				<description>&lt;p&gt;6月读的这几本书很值得推荐。&lt;/p&gt;

&lt;h2&gt;清醒思考的艺术&lt;/h2&gt;

&lt;p&gt;是一本关于思维误区的书，大概是今年读到的最好的书了，本书分为几十个小章节，每章讲了一个“思维误区”。有一些思维误区众所周知，比如《影响力》里面的从众心理、赠与-回馈心理。还有一些不是那么众所周知，但是更加重要的思维误区，比如团队里的会议，为什么大家倾向于不说出自己的意见，这是因为一方面没有人想做一个（永远的）捣蛋鬼，另一方面人们会认为如果大家都达成一致的意见，而自己有所异议的话，一定是自己错了。这个思维误区的解决办法是如果自己有异议，一定要说出来，而作为领导，则总是要指定一个人表达他的否定观点。&lt;/p&gt;

&lt;p&gt;还有一章印象很深，叫“干掉你的宠儿”，意思是说我们每个人都有自己很喜欢、很确认的观点，比如对于之前的我，就有一个观点是html5的app很好，可以跟原生代码做一样的事情。拥有这样的“宠儿”会妨碍我真正地去做调查和学习，我会自动忽略那些说html5不好的信息，而增强那些说html5好的信息。这样就无法很客观地思考，觉得所有的信息都在说html5很好。避免思维误区的办法就是“干掉你的宠儿”，查找资料的时候总是试图证明自己是错误的，而不是证明自己是正确的。&lt;/p&gt;

&lt;h2&gt;盛夏的方程式&lt;/h2&gt;

&lt;p&gt;东野圭吾的最新推理小说，四星推荐，在诡计上不如《嫌疑人X的献身》，但东野的脑残粉不可错过。&lt;/p&gt;

&lt;h2&gt;为什么中国人勤劳而不富有&lt;/h2&gt;

&lt;p&gt;非常非常不错的一本书，五星推荐，作者的观点和表达方法都绝佳，堪称最好的经济学书之一，跟之前的《王二的经济学》很像。&lt;/p&gt;

&lt;p&gt;本书最主要的观点是中国的制度没有保护私有财产，在资金流动上没有鼓励资源有效的配置……而信息时代的财富主要是由制度决定的，所以中国现在真的进入很危险的阶段。中国目前还可以凭借廉价的人力成本、丰沛的出口需求（逐年下降了）、制造业来拉动经济增长，但未来更大的增长点在于内需、更高的人力成本、服务业等……&lt;/p&gt;
</description>
				<pubDate>Tue, 02 Jul 2013 11:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/june-reading-list/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/june-reading-list/</guid>
			</item>
		
			<item>
				<title>2013年中国开发者大会</title>
				<description>&lt;p&gt;昨天有幸参加了在广州举办的&lt;a href=&quot;http://cdc.9ria.com/2013gz/index.html&quot;&gt;2013年中国开发者大会&lt;/a&gt;，因为早上要从深圳出发，两小时的车程后才到达广州白云国际会议中心，所以上午的话题只能听到两个了，但是都非常有感悟。下午的话题分为6个主题在6个场馆分别举行，6个话题分别是HTML5、iOS、Android、Unity、Cocos2d-x、Flash，我比较感兴趣的是iOS和HTML5，所以下午听了3个iOS的话题之后去了HTML5会场，我就说说我的所见所闻吧。&lt;/p&gt;

&lt;p&gt;中国开发者大会是由9tech社区、搜狐畅游、搜狗、51CTO、17173、开源中国社区、segmentfault联合主办，基本上媒体和社区居多，但是现场站台不限于媒体，还有一些APP厂商、游戏厂商、硬件厂商（黑莓），展台不多，二十来个的样子。等我们到达的时候已经没什么活动了的样子，都去听嘉宾分享了。&lt;/p&gt;

&lt;h2&gt;艾媒解读：移动互联网当前热点&lt;/h2&gt;

&lt;p&gt;上午我们到达会场的时候正好听到艾媒的这个分享，&lt;a href=&quot;http://www.iimedia.cn/&quot;&gt;艾媒&lt;/a&gt;是专门分析移动数据的咨询公司，经常在官网上会发布一些不错的数据和报告，或者企业提供咨询服务。&lt;/p&gt;

&lt;p&gt;今天分享的主要内容是移动互联网的一些方向，没有具体到某个应用或者分析，而是非常概括地指出了一些方向：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;医疗&lt;/li&gt;
&lt;li&gt;教育&lt;/li&gt;
&lt;li&gt;政府&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;其实针对中国app store榜清一色的游戏排名，我们开发者都会希望在其他分类多出一些优秀的app，能改变游戏一枝独秀的情况吧。想想v2ex上有开发者晒自己的开发者账户的时候，如果不是游戏开发，下面总会有人说：“赞不是游戏开发”。不是说做游戏不好，而是如果在中国区如果不做游戏而还是能有不错的收入的话，是非常受高端用户欢迎的。当然如果能做出非常独特好玩的游戏，我觉得也是非常赞的，只是优秀游戏的比例太少了，无脑跟风的太多了。&lt;/p&gt;

&lt;p&gt;题外话，推荐看部电源&lt;a href=&quot;http://movie.douban.com/subject/7015793/&quot;&gt;《独立游戏大电影》&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;关注用户体验，打磨优秀应用&lt;/h2&gt;

&lt;p&gt;Testlink云测试的CEO分享了这个话题，我开始还有点奇怪，为什么一个做云测试的公司的CEO会来讲用户体验的问题，这不应该是产品经理或者设计师考虑的么？听了他的分享，我开始理解他的观点，颇有点布道者的意思。&lt;/p&gt;

&lt;p&gt;因为经常测试所有的android手机，他们发现很多用户，包括移动互联网的“原住民”生下来就会用手机，用的是299元5寸大屏的android手机，每月5元的GPRS流量套餐。而且这些用户在我们的付费用户中占据了很大的比例，所以需要非常谨慎地考虑他们的手机在运行我们的应用的时候的体验，这些体验包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;应用启动的速度&lt;/li&gt;
&lt;li&gt;应用耗电量&lt;/li&gt;
&lt;li&gt;应用耗流量&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;这是他推荐的最佳实践：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;总是用最差的android手机来测试自己的app&lt;/li&gt;
&lt;li&gt;不要申请不需要的权限，避免不必要的耗电量，净化android软件环境&lt;/li&gt;
&lt;li&gt;不要使用不必要的网络连接，少使用网络通信（除非是做即时通信app）&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;iOS分层架构设计&lt;/h2&gt;

&lt;p&gt;下午我们一行人分开去了不同场馆，有html5、Cocos2d-X、Android，我去了iOS，iOS分层架构设计是iOS会场下午的第一个主题。&lt;/p&gt;

&lt;p&gt;关东升是移动开发专家，但他这个话题其实比较偏基础了。架构设计最主要的目标是减少耦合，细化开发角色。逻辑层、数据层、UI层可以分开运作。所以最基础的就是MVC架构，逻辑层不用管数据层是把数据存储在文件中还是数据库中，也不用管UI层如何显示数据。好处是可以分开测试每一个环节。&lt;/p&gt;

&lt;p&gt;如果你想要分享一部分功能又不想开源，静态链接库是最好的选择。&lt;/p&gt;

&lt;p&gt;静态链接库适用于：&lt;/p&gt;

&lt;p&gt;1.你想将一部分以后都不会修改的代码打包，供其他项目使用&lt;/p&gt;

&lt;p&gt;2.你想将一部分代码封装起来给别人用，又不愿别人看到你的实现方法&lt;/p&gt;

&lt;p&gt;有兴趣的可以自行google下。&lt;/p&gt;

&lt;p&gt;还有一个是工作空间（workspace）的概念。一般的某个应用单独新建一个 project 就可以了，然后把所有的程序文件都放在里面，这个可以满足大部分普通的需求，但是有时候，项目有可能要使用其他的项目文件，或者引入其他的静态库文件，这个时候 workspace 就派上用场了，workspace即可以单独管理多个项目，又可以通过配置，让各个项目相互依赖，如果不用workspace，以前的做法是如果用到其他项目的文件，要手动 copy 文件到当前的项目，在 workspace 里这个步骤不需要了。&lt;/p&gt;

&lt;h2&gt;iOS应用原形设计&lt;/h2&gt;

&lt;p&gt;赵大羽是移动平台交互设计总监，他分享的这个话题其实没有讲太多工具的使用，而是介绍了iOS设计的工作流和草图绘制方法。&lt;/p&gt;

&lt;p&gt;独立开发者一般请不起设计师的话一般采用这样的工作流：首先用基本元素随笔搞搞，功能能用了，然后找个美工过来，说，给我整好看点，按钮整的让人有点击的欲望，图标要醒目……&lt;/p&gt;

&lt;p&gt;赵大羽不推荐这样的工作流，因为设计的工作不仅是美化页面。所以要么让设计师从产品创意阶段就开始参与，要么自己作为独立开发者多学习一些设计知识。&lt;/p&gt;

&lt;p&gt;在产品创意阶段，他推荐的方法是头脑风暴。在原型草图阶段，他认为简陋的草图能力反而很珍贵，因为拥有更多的可能性，就像表现主义一样。然后还分析了画草图的一些技术细节，比如线条要么交叉要么断开等。&lt;/p&gt;

&lt;p&gt;他还分析了iOS6设计风格大变的原因：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;12年未变的设计风格，用户有点审美疲劳&lt;/li&gt;
&lt;li&gt;隐喻的设计风格无论是对于苹果还是app厂商，成本都太大，无法批量生产&lt;/li&gt;
&lt;li&gt;华丽的纹理细节和光影对于硬件的消耗比较大，不值得&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;所以iOS6变为更加简约和工业的设计风格，但是在细节处也有一些包豪斯解构主义的思路在里面。&lt;/p&gt;

&lt;h2&gt;小节&lt;/h2&gt;

&lt;p&gt;参加一次这样的会议也许不是性价比最高的学习方法，但偶尔去一下的话也能感受一下行业的脉搏，特别是参会者中还有一些广州本地的年轻学生。比较遗憾这次没有印名片就去了，也许下次考虑印一盒名片过去，哈哈。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2013/06/cdc-1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2013/06/cdc-2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2013/06/cdc-3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Sun, 30 Jun 2013 18:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/cdc-2013/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/cdc-2013/</guid>
			</item>
		
			<item>
				<title>Kindle Paper White——五星级产品</title>
				<description>&lt;p&gt;使用了新的kindle paperwhite一段时间之后，我爱死这台电子书了。&lt;/p&gt;

&lt;p&gt;kpw是亚马逊出的最新电子书主打产品，目标群是重症阅读用户、希望随时随地阅读的用户。&lt;/p&gt;

&lt;p&gt;kpw是阅读者的随身物件，不是需要供奉的宝物，所以不建议购买皮套，甚至贴膜。它应该随时出现在你的背包、口袋中，方便阅读，而不是小心翼翼地供奉。日版kpw才600左右，皮套要200。&lt;/p&gt;

&lt;p&gt;建议买了kindle之后刷一个多看系统，因为多看书城的中文电子书更多一点，而且也经常有新书上架。kindle里不能直接购买多看电子书，但是可以把链接发送到邮箱，然后电脑上或者手机上购买。我更喜欢的流程是在手机多看app书城浏览购买好电子书，使用苹果内购直接付款，然后再在kindle的个人中心下载。&lt;/p&gt;

&lt;p&gt;一个月来我买了27本书，大部分是6元的，也有12元和18元的。算起来还是比纸质书便宜很多，更重要的是通过这个设备我可以马上拿到这本书，并且可以一步步，看下去。&lt;/p&gt;

&lt;p&gt;有一些书很好看，很值得，还有一些不那么好看，也没关系。多看时支持试读的。&lt;/p&gt;

&lt;p&gt;多看书城有一个设定是我每买一本书就可以获得这本书的推荐链接，通过这个邀请码注册的新用户可以免费获得这本书，下面我发一些我觉得很好的书的邀请码：&lt;/p&gt;

&lt;p&gt;《盛夏的方程式》（东野圭吾新书） 988PAC45192F
《了不起的盖茨比》 8DAP9508F4F2
《瓦尔登湖》 1BEP23E0F805
《爸爸爱喜禾》 F4AP030E0DA5
《清醒思考的艺术》（非常喜欢） C4FPFEEFB205
《极简欧洲史》 4F9P43F40A32
《黄瓜的黄，西瓜的西》 96EP942FC70C
《安静，内向性格的竞争力》（非常喜欢） EE9P92B8320A
《APP创富传奇》 864PC93C5461
。。。&lt;/p&gt;

&lt;p&gt;比起上一代同类产品kindle3（也叫kindle keyboard）有这几个优势：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PPI更高，字迹圆润清晰，虽然比不上iphone retina，但是阅读已经完全没问题了。&lt;/li&gt;
&lt;li&gt;体积更小，因为去掉了物理keyboard，所以放在口袋是没问题了。&lt;/li&gt;
&lt;li&gt;增加了背光灯！在阳光下看不出来有背光存在，而光线稍暗一点的时候能看到电子书的屏幕上发出淡淡微光，在完全黑暗的夜晚就显得很明亮了，可以当小手电筒用。&lt;/li&gt;
&lt;li&gt;响应速度更快，翻页更快。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;kpw不适合以下用户：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;希望浏览网页，或者玩游戏；&lt;/li&gt;
&lt;li&gt;希望阅读和处理移动文档（word、pdf等）。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;这是我的多看阅历统计图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/79b328c9jw1e5t9q7ci0dj20l20rewfn.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;早上平均6点半起床后看书，然后班车上是8点20到9点，中午有一个高峰期是吃完饭12：30到1：30，下午的高峰期是7点的班车上，晚上的高峰期是10点入睡前了。不过最近忙于几个app的制作，看的少了一点。&lt;/p&gt;

&lt;p&gt;最后是购买建议，国行的价格是849，简直是坑爹了。建议海淘，注册一个海淘网站，支付一点转运费，然后在日本亚马逊上购买日版kwp，到手才600左右。&lt;/p&gt;

&lt;p&gt;如果觉得海淘麻烦，或者不懂日文，可以来我本人的淘宝店下单，640直接寄到你家里。&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;http://item.taobao.com/item.htm?spm=a1z10.1.w137644-274570537.2.3C4jrE&amp;amp;id=20986547732&quot;&gt;http://item.taobao.com/item.htm?spm=a1z10.1.w137644-274570537.2.3C4jrE&amp;amp;id=20986547732&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;因为亚马逊限购，也不能合单转运，所以要提价了。&lt;/p&gt;

&lt;p&gt;640太低了，亏本的厉害，做不到，调整了价格，具体以淘宝店为准，抱歉。&lt;/p&gt;
</description>
				<pubDate>Wed, 19 Jun 2013 16:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/kindle-paperwhite/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/kindle-paperwhite/</guid>
			</item>
		
	</channel>
</rss>