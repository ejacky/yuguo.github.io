<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Yuguo's Blog</title>
		<link>http://yuguo.us/</link>
		<atom:link href="http://yuguo.us//feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>6月荐书单</title>
				<description>&lt;p&gt;6月读的这几本书很值得推荐。&lt;/p&gt;

&lt;h2&gt;清醒思考的艺术&lt;/h2&gt;

&lt;p&gt;是一本关于思维误区的书，大概是今年读到的最好的书了，本书分为几十个小章节，每章讲了一个“思维误区”。有一些思维误区众所周知，比如《影响力》里面的从众心理、赠与-回馈心理。还有一些不是那么众所周知，但是更加重要的思维误区，比如团队里的会议，为什么大家倾向于不说出自己的意见，这是因为一方面没有人想做一个（永远的）捣蛋鬼，另一方面人们会认为如果大家都达成一致的意见，而自己有所异议的话，一定是自己错了。这个思维误区的解决办法是如果自己有异议，一定要说出来，而作为领导，则总是要指定一个人表达他的否定观点。&lt;/p&gt;

&lt;p&gt;还有一章印象很深，叫“干掉你的宠儿”，意思是说我们每个人都有自己很喜欢、很确认的观点，比如对于之前的我，就有一个观点是html5的app很好，可以跟原生代码做一样的事情。拥有这样的“宠儿”会妨碍我真正地去做调查和学习，我会自动忽略那些说html5不好的信息，而增强那些说html5好的信息。这样就无法很客观地思考，觉得所有的信息都在说html5很好。避免思维误区的办法就是“干掉你的宠儿”，查找资料的时候总是试图证明自己是错误的，而不是证明自己是正确的。&lt;/p&gt;

&lt;h2&gt;盛夏的方程式&lt;/h2&gt;

&lt;p&gt;东野圭吾的最新推理小说，四星推荐，在诡计上不如《嫌疑人X的献身》，但东野的脑残粉不可错过。&lt;/p&gt;

&lt;h2&gt;为什么中国人勤劳而不富有&lt;/h2&gt;

&lt;p&gt;非常非常不错的一本书，五星推荐，作者的观点和表达方法都绝佳，堪称最好的经济学书之一，跟之前的《王二的经济学》很像。&lt;/p&gt;

&lt;p&gt;本书最主要的观点是中国的制度没有保护私有财产，在资金流动上没有鼓励资源有效的配置……而信息时代的财富主要是由制度决定的，所以中国现在真的进入很危险的阶段。中国目前还可以凭借廉价的人力成本、丰沛的出口需求（逐年下降了）、制造业来拉动经济增长，但未来更大的增长点在于内需、更高的人力成本、服务业等……&lt;/p&gt;
</description>
				<pubDate>Tue, 02 Jul 2013 11:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/june-reading-list/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/june-reading-list/</guid>
			</item>
		
			<item>
				<title>2013年中国开发者大会</title>
				<description>&lt;p&gt;昨天有幸参加了在广州举办的&lt;a href=&quot;http://cdc.9ria.com/2013gz/index.html&quot;&gt;2013年中国开发者大会&lt;/a&gt;，因为早上要从深圳出发，两小时的车程后才到达广州白云国际会议中心，所以上午的话题只能听到两个了，但是都非常有感悟。下午的话题分为6个主题在6个场馆分别举行，6个话题分别是HTML5、iOS、Android、Unity、Cocos2d-x、Flash，我比较感兴趣的是iOS和HTML5，所以下午听了3个iOS的话题之后去了HTML5会场，我就说说我的所见所闻吧。&lt;/p&gt;

&lt;p&gt;中国开发者大会是由9tech社区、搜狐畅游、搜狗、51CTO、17173、开源中国社区、segmentfault联合主办，基本上媒体和社区居多，但是现场站台不限于媒体，还有一些APP厂商、游戏厂商、硬件厂商（黑莓），展台不多，二十来个的样子。等我们到达的时候已经没什么活动了的样子，都去听嘉宾分享了。&lt;/p&gt;

&lt;h2&gt;艾媒解读：移动互联网当前热点&lt;/h2&gt;

&lt;p&gt;上午我们到达会场的时候正好听到艾媒的这个分享，&lt;a href=&quot;http://www.iimedia.cn/&quot;&gt;艾媒&lt;/a&gt;是专门分析移动数据的咨询公司，经常在官网上会发布一些不错的数据和报告，或者企业提供咨询服务。&lt;/p&gt;

&lt;p&gt;今天分享的主要内容是移动互联网的一些方向，没有具体到某个应用或者分析，而是非常概括地指出了一些方向：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;医疗&lt;/li&gt;
&lt;li&gt;教育&lt;/li&gt;
&lt;li&gt;政府&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其实针对中国app store榜清一色的游戏排名，我们开发者都会希望在其他分类多出一些优秀的app，能改变游戏一枝独秀的情况吧。想想v2ex上有开发者晒自己的开发者账户的时候，如果不是游戏开发，下面总会有人说：“赞不是游戏开发”。不是说做游戏不好，而是如果在中国区如果不做游戏而还是能有不错的收入的话，是非常受高端用户欢迎的。当然如果能做出非常独特好玩的游戏，我觉得也是非常赞的，只是优秀游戏的比例太少了，无脑跟风的太多了。&lt;/p&gt;

&lt;p&gt;题外话，推荐看部电源&lt;a href=&quot;http://movie.douban.com/subject/7015793/&quot;&gt;《独立游戏大电影》&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;关注用户体验，打磨优秀应用&lt;/h2&gt;

&lt;p&gt;Testlink云测试的CEO分享了这个话题，我开始还有点奇怪，为什么一个做云测试的公司的CEO会来讲用户体验的问题，这不应该是产品经理或者设计师考虑的么？听了他的分享，我开始理解他的观点，颇有点布道者的意思。&lt;/p&gt;

&lt;p&gt;因为经常测试所有的android手机，他们发现很多用户，包括移动互联网的“原住民”生下来就会用手机，用的是299元5寸大屏的android手机，每月5元的GPRS流量套餐。而且这些用户在我们的付费用户中占据了很大的比例，所以需要非常谨慎地考虑他们的手机在运行我们的应用的时候的体验，这些体验包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;应用启动的速度&lt;/li&gt;
&lt;li&gt;应用耗电量&lt;/li&gt;
&lt;li&gt;应用耗流量&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这是他推荐的最佳实践：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;总是用最差的android手机来测试自己的app&lt;/li&gt;
&lt;li&gt;不要申请不需要的权限，避免不必要的耗电量，净化android软件环境&lt;/li&gt;
&lt;li&gt;不要使用不必要的网络连接，少使用网络通信（除非是做即时通信app）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;iOS分层架构设计&lt;/h2&gt;

&lt;p&gt;下午我们一行人分开去了不同场馆，有html5、Cocos2d-X、Android，我去了iOS，iOS分层架构设计是iOS会场下午的第一个主题。&lt;/p&gt;

&lt;p&gt;关东升是移动开发专家，但他这个话题其实比较偏基础了。架构设计最主要的目标是减少耦合，细化开发角色。逻辑层、数据层、UI层可以分开运作。所以最基础的就是MVC架构，逻辑层不用管数据层是把数据存储在文件中还是数据库中，也不用管UI层如何显示数据。好处是可以分开测试每一个环节。&lt;/p&gt;

&lt;p&gt;如果你想要分享一部分功能又不想开源，静态链接库是最好的选择。&lt;/p&gt;

&lt;p&gt;静态链接库适用于：&lt;/p&gt;

&lt;p&gt;1.你想将一部分以后都不会修改的代码打包，供其他项目使用&lt;/p&gt;

&lt;p&gt;2.你想将一部分代码封装起来给别人用，又不愿别人看到你的实现方法&lt;/p&gt;

&lt;p&gt;有兴趣的可以自行google下。&lt;/p&gt;

&lt;p&gt;还有一个是工作空间（workspace）的概念。一般的某个应用单独新建一个 project 就可以了，然后把所有的程序文件都放在里面，这个可以满足大部分普通的需求，但是有时候，项目有可能要使用其他的项目文件，或者引入其他的静态库文件，这个时候 workspace 就派上用场了，workspace即可以单独管理多个项目，又可以通过配置，让各个项目相互依赖，如果不用workspace，以前的做法是如果用到其他项目的文件，要手动 copy 文件到当前的项目，在 workspace 里这个步骤不需要了。&lt;/p&gt;

&lt;h2&gt;iOS应用原形设计&lt;/h2&gt;

&lt;p&gt;赵大羽是移动平台交互设计总监，他分享的这个话题其实没有讲太多工具的使用，而是介绍了iOS设计的工作流和草图绘制方法。&lt;/p&gt;

&lt;p&gt;独立开发者一般请不起设计师的话一般采用这样的工作流：首先用基本元素随笔搞搞，功能能用了，然后找个美工过来，说，给我整好看点，按钮整的让人有点击的欲望，图标要醒目……&lt;/p&gt;

&lt;p&gt;赵大羽不推荐这样的工作流，因为设计的工作不仅是美化页面。所以要么让设计师从产品创意阶段就开始参与，要么自己作为独立开发者多学习一些设计知识。&lt;/p&gt;

&lt;p&gt;在产品创意阶段，他推荐的方法是头脑风暴。在原型草图阶段，他认为简陋的草图能力反而很珍贵，因为拥有更多的可能性，就像表现主义一样。然后还分析了画草图的一些技术细节，比如线条要么交叉要么断开等。&lt;/p&gt;

&lt;p&gt;他还分析了iOS6设计风格大变的原因：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;12年未变的设计风格，用户有点审美疲劳&lt;/li&gt;
&lt;li&gt;隐喻的设计风格无论是对于苹果还是app厂商，成本都太大，无法批量生产&lt;/li&gt;
&lt;li&gt;华丽的纹理细节和光影对于硬件的消耗比较大，不值得&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以iOS6变为更加简约和工业的设计风格，但是在细节处也有一些包豪斯解构主义的思路在里面。&lt;/p&gt;

&lt;h2&gt;小节&lt;/h2&gt;

&lt;p&gt;参加一次这样的会议也许不是性价比最高的学习方法，但偶尔去一下的话也能感受一下行业的脉搏，特别是参会者中还有一些广州本地的年轻学生。比较遗憾这次没有印名片就去了，也许下次考虑印一盒名片过去，哈哈。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2013/06/cdc-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2013/06/cdc-2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2013/06/cdc-3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
				<pubDate>Sun, 30 Jun 2013 18:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/cdc-2013/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/cdc-2013/</guid>
			</item>
		
			<item>
				<title>Kindle Paper White——五星级产品</title>
				<description>&lt;p&gt;使用了新的kindle paperwhite一段时间之后，我爱死这台电子书了。&lt;/p&gt;

&lt;p&gt;kpw是亚马逊出的最新电子书主打产品，目标群是重症阅读用户、希望随时随地阅读的用户。&lt;/p&gt;

&lt;p&gt;kpw是阅读者的随身物件，不是需要供奉的宝物，所以不建议购买皮套，甚至贴膜。它应该随时出现在你的背包、口袋中，方便阅读，而不是小心翼翼地供奉。日版kpw才600左右，皮套要200。&lt;/p&gt;

&lt;p&gt;建议买了kindle之后刷一个多看系统，因为多看书城的中文电子书更多一点，而且也经常有新书上架。kindle里不能直接购买多看电子书，但是可以把链接发送到邮箱，然后电脑上或者手机上购买。我更喜欢的流程是在手机多看app书城浏览购买好电子书，使用苹果内购直接付款，然后再在kindle的个人中心下载。&lt;/p&gt;

&lt;p&gt;一个月来我买了27本书，大部分是6元的，也有12元和18元的。算起来还是比纸质书便宜很多，更重要的是通过这个设备我可以马上拿到这本书，并且可以一步步，看下去。&lt;/p&gt;

&lt;p&gt;有一些书很好看，很值得，还有一些不那么好看，也没关系。多看时支持试读的。&lt;/p&gt;

&lt;p&gt;多看书城有一个设定是我每买一本书就可以获得这本书的推荐链接，通过这个邀请码注册的新用户可以免费获得这本书，下面我发一些我觉得很好的书的邀请码：&lt;/p&gt;

&lt;p&gt;《盛夏的方程式》（东野圭吾新书） 988PAC45192F
《了不起的盖茨比》 8DAP9508F4F2
《瓦尔登湖》 1BEP23E0F805
《爸爸爱喜禾》 F4AP030E0DA5
《清醒思考的艺术》（非常喜欢） C4FPFEEFB205
《极简欧洲史》 4F9P43F40A32
《黄瓜的黄，西瓜的西》 96EP942FC70C
《安静，内向性格的竞争力》（非常喜欢） EE9P92B8320A
《APP创富传奇》 864PC93C5461
。。。&lt;/p&gt;

&lt;p&gt;比起上一代同类产品kindle3（也叫kindle keyboard）有这几个优势：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PPI更高，字迹圆润清晰，虽然比不上iphone retina，但是阅读已经完全没问题了。&lt;/li&gt;
&lt;li&gt;体积更小，因为去掉了物理keyboard，所以放在口袋是没问题了。&lt;/li&gt;
&lt;li&gt;增加了背光灯！在阳光下看不出来有背光存在，而光线稍暗一点的时候能看到电子书的屏幕上发出淡淡微光，在完全黑暗的夜晚就显得很明亮了，可以当小手电筒用。&lt;/li&gt;
&lt;li&gt;响应速度更快，翻页更快。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;kpw不适合以下用户：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;希望浏览网页，或者玩游戏；&lt;/li&gt;
&lt;li&gt;希望阅读和处理移动文档（word、pdf等）。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这是我的多看阅历统计图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/79b328c9jw1e5t9q7ci0dj20l20rewfn.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;早上平均6点半起床后看书，然后班车上是8点20到9点，中午有一个高峰期是吃完饭12：30到1：30，下午的高峰期是7点的班车上，晚上的高峰期是10点入睡前了。不过最近忙于几个app的制作，看的少了一点。&lt;/p&gt;

&lt;p&gt;最后是购买建议，国行的价格是849，简直是坑爹了。建议海淘，注册一个海淘网站，支付一点转运费，然后在日本亚马逊上购买日版kwp，到手才600左右。&lt;/p&gt;

&lt;p&gt;如果觉得海淘麻烦，或者不懂日文，可以来我本人的淘宝店下单，640直接寄到你家里。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://item.taobao.com/item.htm?spm=a1z10.1.w137644-274570537.2.3C4jrE&amp;amp;id=20986547732&quot;&gt;http://item.taobao.com/item.htm?spm=a1z10.1.w137644-274570537.2.3C4jrE&amp;amp;id=20986547732&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;因为亚马逊限购，也不能合单转运，所以要提价了。&lt;/p&gt;

&lt;p&gt;640太低了，亏本的厉害，做不到，调整了价格，具体以淘宝店为准，抱歉。&lt;/p&gt;
</description>
				<pubDate>Wed, 19 Jun 2013 16:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/kindle-paperwhite/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/kindle-paperwhite/</guid>
			</item>
		
			<item>
				<title>33号铺停止更新</title>
				<description>&lt;p&gt;我遗憾地决定停止更新&lt;a href=&quot;https://github.com/yuguo/33pu&quot;&gt;33号铺&lt;/a&gt;，最主要的原因是根据&lt;a href=&quot;http://club.alimama.com/read-htm-tid-4369390.html&quot;&gt;淘宝新规&lt;/a&gt;，对于API权限有大幅度的削减，对于&lt;a href=&quot;http://open.taobao.com/doc/detail.htm?id=139&quot;&gt;API接口开发应用的准入条件&lt;/a&gt;修改为以下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;（一）申请调用淘宝客API接口的淘宝账户（以下简称为“开发者账户”）对应的阿里妈妈账户的淘宝客会员等级为金冠级别及以上；&lt;/li&gt;
&lt;li&gt;（二）申请验证的网站（以下简称为“网站”）应在工业和信息化部信息备案管理系统进行网站备案；&lt;/li&gt;
&lt;li&gt;（四）网站ALEXA排名在10万名及以内；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这几条严格的限制导致包括我本人在内的广大appkey都失去了淘宝客的权限，相信大多数中小网站的appkey也是如此。所以现在很多用33pu做后台的网站都会出现搜索不出任何结果的情况。&lt;/p&gt;

&lt;p&gt;33号铺的原理是在后台通过API搜索淘宝的所有商品的佣金，然后一键添加到前台。现在失去了API权限，后台自然无法搜索出任何结果。小淘宝客玩家仍然可以在阿里妈妈的后台手动搜索，然后添加到自己的CMS中去。&lt;/p&gt;

&lt;p&gt;我做33号铺的初衷就是希望可以帮助做出更多高质量的长尾淘宝客，所以不做自动抓取，专注体验和分类……但现在淘宝的策略是已经完全抛弃中小淘宝客了。这违背了我的初衷，所以我不再更新了。&lt;/p&gt;

&lt;p&gt;做33号铺的过程也是非常有意思的，33号铺也冲上过github的PHP排行榜，在github榜上看见中国人的程序还是很开心的。33号铺还上了&lt;a href=&quot;http://codeigniter.org.cn/news/project_33pu&quot;&gt;Codeigniter中国&lt;/a&gt;的首页推荐，也非常开心。&lt;/p&gt;

&lt;p&gt;最终我没有从33pu中获得任何金钱的奖励，但对我而言，我已经获得了极大的奖励。过程即奖励。&lt;/p&gt;

&lt;p&gt;最后，33号铺仍然保持开源，有权限的apikey仍然可以免费使用和修改我的代码，但我本人不再更新了。&lt;/p&gt;

&lt;p&gt;对了，33号铺的群还是保持讨论，可以聊聊其它程序，或者营销类、编程类的话题，群号码：230831981，敲门砖”33号铺“。&lt;/p&gt;
</description>
				<pubDate>Thu, 13 Jun 2013 16:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/33pu-stop-update/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/33pu-stop-update/</guid>
			</item>
		
			<item>
				<title>我的第一个app上架了【限免3天】</title>
				<description>&lt;p&gt;我的进度大概是这样的，去年11月开始学习做iOS开发，并且在本地调试。今年2月份注册开发者账号，开始真机调试，在5月初的时候程序1.0版完工准备上线了，然后打包提交。我等待了7天的时间之后，被苹果告知app的名字侵权。&lt;/p&gt;

&lt;p&gt;因为我做的是英雄联盟的攻略app，所以我叫“联盟大师”，但是苹果说我的app名字或者描述或者元数据涉嫌侵权，让我改成“appname - for 英雄联盟”。&lt;/p&gt;

&lt;p&gt;我就想那就不叫联盟吧，改成了“LoL攻略”，又提交等待了7天，告诉我还是一样的问题……&lt;/p&gt;

&lt;p&gt;我又改，那就叫for 英雄联盟吧，改成了“LoL攻略 - for 英雄联盟”，又焦灼等待了7天，还是不通过，已经习惯了好吗……&lt;/p&gt;

&lt;p&gt;最后无奈改成“撸大师 - for 英雄联盟”，这。下。大。家。满。意。了。吧！&lt;/p&gt;

&lt;p&gt;就在昨天，终于通过了审核，乎~&lt;/p&gt;

&lt;p&gt;为庆祝第一个app上架，限免3天，8号恢复6元价格。&lt;/p&gt;

&lt;p&gt;欢迎英雄联盟爱好者下载，求好评，求批评，如果实在有需求，我会继续更新！说真的，好评差评我都不会太介意，只要有人评价，我就有更新的动力了哦也~&lt;/p&gt;

&lt;p&gt;最后贴一下下载地址和二维码，欢迎下载：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/cn/app/lu-da-shi-for-ying-xiong-lian/id646299086?mt=8&quot;&gt;https://itunes.apple.com/cn/app/lu-da-shi-for-ying-xiong-lian/id646299086?mt=8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2013/06/lol-app.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 05 Jun 2013 18:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/my-first-ios-app/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/my-first-ios-app/</guid>
			</item>
		
			<item>
				<title>《布道之道》</title>
				<description>&lt;p&gt;最近看完了《布道之道》这本书，深有感触。本书讲的是如何在技术团队中推动一项新的技术或者流程或者工具，非常适合我们现在的状况。英文名是Driving Technical Change，非常质朴。&lt;/p&gt;

&lt;p&gt;本书非常短小，分为四部分。&lt;/p&gt;

&lt;p&gt;第一部分的前提是，我们要推广的是解决问题，而不是某一个特定的解决方案。所以如果我们容易走入误区：闷头思考自己的解决方案，而忽略了这其实是很多解决方案中的一种。就像我们说服别人的时候不希望别人固执己见一样，我们也要持开放的态度。为此，就必须保证自己的解决方案真的合适，再也找不到更好的方案了。&lt;/p&gt;

&lt;p&gt;在推广自己的“道”的时候，往往会有一些人提出反对意见，本书中我们称他们“怀疑者”。&lt;/p&gt;

&lt;p&gt;第二部分介绍了团队中的“怀疑者”大概都可以分为哪几种：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;孤陋寡闻型&lt;/li&gt;
&lt;li&gt;随波逐流型（这种类型其实很难说是怀疑者）&lt;/li&gt;
&lt;li&gt;般般挑剔型&lt;/li&gt;
&lt;li&gt;激情燃尽型&lt;/li&gt;
&lt;li&gt;时间紧迫型&lt;/li&gt;
&lt;li&gt;发号施令型&lt;/li&gt;
&lt;li&gt;不可理喻型&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不是身边的每个人都可以很明确的归类到哪一类型，某人很有可能是轻微的激情燃尽型加上时间紧迫型。可以参考一下提示：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;孤陋寡闻型的人不可能同时是激情燃尽型的人；&lt;/li&gt;
&lt;li&gt;大多数人多少都有一点时间紧迫症；&lt;/li&gt;
&lt;li&gt;很难把随波逐流的人定性为怀疑者；&lt;/li&gt;
&lt;li&gt;不可理喻的人经常会伪装成其他怀疑者。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;第三部分是最重要的部分，介绍了一些具体的方法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;取得经验&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;也就是尽可能地了解自己需要推广的“道”，要做到无懈可击。要做到“专家”就要不断学习和更新，并且在实际中使用，不能纸上谈兵。&lt;/p&gt;

&lt;p&gt;但要注意的是，从和蔼可亲的“专家”到高高在上的“万事通”，这中间只有一步之遥，区别就是看你能否倾听别人的意见。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;传达理念&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;有激情，但不激进；提建议，而不是中伤；多听，而不是多说。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;展示技术&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;百闻不如一见，说的多不如展示出来。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;适当妥协&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;其实没看懂这一章。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;建立信任&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这是一个长期的工作。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;公之于众&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;开源到外部，然后反向推广到部门内部。因为人们倾向于认为“身边那个家伙不比自己强多少”，就像圣经里说的：“在自己的家乡永远成不了先知”。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注重合力&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;把技术驱动改成商业驱动，找到商业上的进步点，然后让管理层来推动。&lt;/p&gt;

&lt;p&gt;“搭一座桥”&lt;/p&gt;

&lt;p&gt;在现状和想要推广的“道”之间如果有一道鸿沟或者太大的差距，可以先推广一些“中间技术”。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;来点刺激&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;找到同事们身边的“痛点”，然后吸引他们。&lt;/p&gt;

&lt;p&gt;第四部分是一些技巧策略，其实就是第三部分的操作遇到困难的时候的一些策略。&lt;/p&gt;

&lt;p&gt;本身非常值得一看，特别是希望在自己的组内推广自己的想法的同学。&lt;/p&gt;
</description>
				<pubDate>Mon, 20 May 2013 11:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/driving-technical-change/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/driving-technical-change/</guid>
			</item>
		
			<item>
				<title>重拾kindle</title>
				<description>&lt;p&gt;我发现一个现象，人在“碎片时间”干的事跟在“整块时间”干的事是一样的。&lt;/p&gt;

&lt;p&gt;碎片时间我花5分钟刷30条微博，那么在整块的50分钟我就会不自觉地刷300条微博；碎片时间我花2分钟打一盘手游，那么整块的1个小时我就歪在床上打手游……我以为用来填补我的碎片时间的那些小事渐渐成为一种习惯，填满我的生活。&lt;/p&gt;

&lt;p&gt;所以我拿出放了快一年的kindle 3，吹一次上面的灰尘，提示文字说电池电量低了，然后充一下电竟然启动了，之前放在里面的书都还在呢。因为之前更新了多看系统的，所以我试试能不能直接更新到最新，到系统设置里检查了一下最新版本，竟然可以直接升级到2013版。&lt;/p&gt;

&lt;p&gt;然后我就一键升级到了2013版的系统，多看做的很好，可以直接登陆多看账号，然后购买图书和下载。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;现在的中文阅读环境已经比一两年前好很多了，两年前多看商城就一些名著精选和玄幻小说什么的，现在品种比较丰富，IT类的也不少。&lt;/li&gt;
&lt;li&gt;kindle 3看电子书效果还是不错的，当然没有背光没有226的ppi，但是看中文书够用了&lt;/li&gt;
&lt;li&gt;kindle paperwhite也不能看英文pdf（特点是尺寸固定，文字小，在ipad2上看都嫌字体不清晰），所以暂时不入手了&lt;/li&gt;
&lt;/ol&gt;
</description>
				<pubDate>Sun, 12 May 2013 13:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/repick-kindle/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/repick-kindle/</guid>
			</item>
		
			<item>
				<title>使用HTML5构建iOS原生APP（6）——禁止链接呼出菜单</title>
				<description>&lt;p&gt;一行css足矣：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;html,body{-webkit-touch-callout: none;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于web页面和webView均适用。&lt;/p&gt;
</description>
				<pubDate>Tue, 07 May 2013 13:01:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/webview-disable-callout/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/webview-disable-callout/</guid>
			</item>
		
			<item>
				<title>第三次的时候把事情做好</title>
				<description>&lt;p&gt;我的经验是，如果刚开始做一件事情，只有在第三次的时候才有机会把事情做的很完美。而第一次和第二次的时候，仅仅能抱着“不出错”的目标去进行罢了。&lt;/p&gt;

&lt;p&gt;这里的事情包括很多，比如第一次用nodejs写一个程序，比如第一次带团队，第一次谈判等等……&lt;/p&gt;

&lt;p&gt;我在做33号铺的时候（去年中），完全不了解codeigniter，PHP也非常粗浅地知道一些基本语法，还需要查书，对于MVC也是一知半解。但是最终还是靠各种“试错”来把程序做出来了。由于在商业上它算一个不错的点子，所以也获得了一些知名度和成功，但是就代码本身来看，它是非常粗浅和糟糕的：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;比如在view层还直接调用了model模块来进行查询和计算，这是MVC的禁忌；&lt;/li&gt;
&lt;li&gt;比如在判断用户输入上太过相信用户，没有考虑SQL注入和xss注入；&lt;/li&gt;
&lt;li&gt;比如函数的返回值没有考虑各种异常，导致在大家下载到自己环境下运行的时候，偶尔会出线未知的问题，而没有足够的报错信息……&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然现在进行了一些优化，已经好一些了。&lt;/p&gt;

&lt;p&gt;为什么当时没有能力写好代码，而现在有一些能力进行优化呢，因为之后又用codeigniter做了一些系统，而且学习ios开发的时候，斯坦福老头也让我对MVC有了进一步的了解。&lt;/p&gt;

&lt;p&gt;其实人学习知识是基于正确的、能运行的系统来学习，我不知道这句代码会运行什么结果，我先echo出来，保证它的结果之后，再删掉这句，进行一些处理，再判断……所以我相信只有在反复练习之后才有机会把事情做的很完美。&lt;/p&gt;

&lt;p&gt;当然也不是所有的事情做3次都能完美，因为只是重复地做一件事的话，“并不是有3年的经验，而是有把一件事情重复做了3年的经验”，所以有一些方法来让自己真的可以在第3次的时候把事情做好：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;把自己的代码和作品，或者做的事情给别人看，虚心接收批评（比如开源）&lt;/li&gt;
&lt;li&gt;方法论和实践并行，如果没有时间的基础上就一天到晚看best practice，就不会有深刻的理解，也是过目即忘。这里的方法论或者是一本书，或者网站，或者一些培训&lt;/li&gt;
&lt;li&gt;review自己以前的作品，然后改进&lt;/li&gt;
&lt;li&gt;分享&lt;/li&gt;
&lt;/ol&gt;
</description>
				<pubDate>Sun, 05 May 2013 13:20:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/make-it-better/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/make-it-better/</guid>
			</item>
		
			<item>
				<title>新项目预研</title>
				<description>&lt;p&gt;因为hex大人在&lt;a href=&quot;http://codeigniter.org.cn&quot;&gt;codeigniter官网&lt;/a&gt;推荐了33号铺，加上有一些用户在其他群里推荐33号铺，所以最近33号铺突然有一股热潮，导致我异常繁忙地处理各种安装问题。&lt;/p&gt;

&lt;p&gt;事实上这些问题非常难处理：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;所有用户的服务器环境都非常非常不同，也有一些安装没按顺序来的，所以出现奇怪的bug&lt;/li&gt;
&lt;li&gt;用户一定要有编程基础，懂得如何创建数据库&lt;/li&gt;
&lt;li&gt;如果是Apache服务器的话，用户需要理解.htaccess来优化url&lt;/li&gt;
&lt;li&gt;代码如果有更新的话，用户非常难应用到自己的项目中，虽然可以用git来修改，但门槛也很高&lt;/li&gt;
&lt;li&gt;即使用户费尽千辛万苦总算在本地安装成功了，还需要去open.taobao.com创建并配置网站，以得到自己的appkey和appsecret&lt;/li&gt;
&lt;li&gt;最后如果要上线的话，用户需要购买域名和主机&lt;/li&gt;
&lt;li&gt;当代码出现bug我想要更新的时候，非常难通知所有的用户去更新&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以我想做一个新的更简单的项目，适合毫无编程基础的用户，可以免去上面所有的步骤：&lt;/p&gt;

&lt;p&gt;这个项目是一个类似格子铺的网站，访客会看到很多格主的格子，里面有反映格主风格的各种商品，点击过去就可以购买。&lt;/p&gt;

&lt;p&gt;那么这个格主是谁呢，她可能仅仅是一个喜欢漂亮裙子的女孩，需要做的非常简单&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;她需要注册登录格子铺网站，可以用QQ登录，或者支付宝登录&lt;/li&gt;
&lt;li&gt;她创建一个格子，开始搜索并添加商品&lt;/li&gt;
&lt;li&gt;随后就会有收入了，她可以输入自己的支付宝账户，钱会自动打过去&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;一些技术细节：站点所有的淘宝客id都是我自己的淘宝客id，但是会带上所有用户自己的id，以让我分清楚哪些用户带来了哪些收入，随后会把收入转给你，我从中收取非常少量的手续费。这样是为了避免所有用户都要注册自己的开发者帐号（现阶段可以传入自己的pid，但10月以后淘宝会不再支持这个参数）。&lt;/p&gt;

&lt;p&gt;当然33号铺项目还是继续维护，为了一些喜欢折腾的朋友。但对于不希望折腾的，希望总是用新的代码的朋友，你们有什么意见和建议呢？&lt;/p&gt;
</description>
				<pubDate>Fri, 03 May 2013 16:20:00 +0800</pubDate>
				<link>http://yuguo.us//weblog/new-project-miloge/</link>
				<guid isPermaLink="true">http://yuguo.us//weblog/new-project-miloge/</guid>
			</item>
		
	</channel>
</rss>